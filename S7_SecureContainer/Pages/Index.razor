@page "/"
@using Docker.DotNet
@using Docker.DotNet.Models;
@inject DockerService docker
@inject IJSRuntime jsRuntime
@inject IToastService toastService

<br />

<div class="card">
    <div class="card-body">
        <EditForm Model="@Model" OnSubmit="@Submit">

            <div class="mb-3">
                <label for="ConnectionString" class="form-label">Docker Host URL</label>
                <InputText class="form-control" id="ConnectionString" @bind-Value="Model!.ConnectionString" />
            </div>

            <button class="btn btn-success" type="submit">Submit</button>
        </EditForm>
    </div>
</div>



@docker.ConnectionString

@code {
    public DockerConnectionHost Model { get; set; } = new();

    //protected override void OnInitialized() => Model ??= new();

    private async void Submit()
    {
        try
        {
            DockerClient client = new DockerClientConfiguration(
            new Uri(Model.ConnectionString))
                .CreateClient();
            IList<ContainerListResponse> containers = await client.Containers.ListContainersAsync(
            new ContainersListParameters()
            {
                Limit = 10,
            });
            if (containers.Count == 0)
            {
                toastService.ShowToast(ToastLevel.Error, "No containers found, please check if the server url is correct.");
                return;
            }
        }
        catch (Exception)
        {
            toastService.ShowToast(ToastLevel.Error, "Could not connect to server url: " + Model.ConnectionString);
            return;
        }

        docker.ConnectionString = Model.ConnectionString;
    }

    public class DockerConnectionHost
    {
        public string ConnectionString { get; set; } = "";
    }
}